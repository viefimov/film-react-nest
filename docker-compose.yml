version: '3.8'

services:
  # Сервис сборки фронтенда: собирает проект и копирует собранный код в volume
  backend:
    image: 'ghcr.io/viefimov/film-react-nest-backend:latest'
    depends_on:
      - postgres
    networks:
      - app-network
    env_file:
      - backend/.env
    restart: unless-stopped
  
  frontend:
    image: 'ghcr.io/viefimov/film-react-nest-frontend:latest'
    networks:
      - app-network
    volumes:
      - frontend_build:/app/dist
    env_file:
      - frontend/.env
    # Команда для сборки и копирования собранных файлов в volume


  # Бэкенд. Обратите внимание, что запускается продакшен-версия из папки dist.


  # Nginx-сервер для раздачи фронтенда и проксирования запросов к бэкенду

  # PostgreSQL база данных
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  # pgAdmin для управления базой данных
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: ghcr.io/viefimov/film-react-nest-nginx:latest
    ports:
      - 80:80
    volumes:
      - frontend_build:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    restart: always

volumes:
  frontend_build:
  pgdata:
  pgadmin_data:

networks:
  app-network:
